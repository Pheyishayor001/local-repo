name: deploy

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Build Docker images
        run: | #tagging with the current run_number to keep track  of each image per commit, to ease roll back in case of a failed deployment.
          docker build -t quotes-app:${{ github.run_number }} .

      - name: "Tag Docker Images"
        run: |
         docker tag quotes-app:${{ github.run_number }} ${{ secrets.DOCKER_HUB_USERNAME }}/quotes-app:${{ github.run_number }}

      - name: Log in to Docker Hub
        uses: docker/login-action@v3 
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: "Push to Docker Hub"
        run: |
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/quotes-app:${{ github.run_number }}

      - name: Add SSH private key
        run: |
         mkdir -p ~/.ssh
         echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
         chmod 600 ~/.ssh/id_rsa

      - name: Add SSH known hosts 
        run: |
         ssh-keyscan -t rsa ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy to Dev server
        run: | #the shell script below loops over the number of IP adresses provided in the secrets.SSH_HOST and deploys the applicaiton
          for host in $(echo "${{ secrets.SSH_HOST }}" | tr ',' ' '); do
          echo "Deploying to $host"
          ssh -o StrictHostKeyChecking=no ubuntu@$host << 'EOF'
          sudo docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/quotes-app:${{ github.run_number }}
          sudo docker stop quotes-app || true
          sudo docker rm quotes-app || true
          sudo docker run --env-file ${{ secrets.DOT_ENV }} -d --name quotes-app -p 8000:8000 ${{ secrets.DOCKER_HUB_USERNAME }}/quotes-app:${{ github.run_number }}
          EOF
          done
          